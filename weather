#!/usr/bin/env python3

import datetime
from sys import argv
import urllib.request

WOEID = "2348327"


def replace_text(condition):
    words = condition.split()
    if words[0].lower() == "am":
        words = words[1:] + ["in", "the", "morning"]
    elif words[0].lower() == "pm":
        words = words[1:] + ["in", "the", "afternoon"]
    for i in range(len(words)):
        if '/' in words[i]:
            words[i] = ', '.join(words[i].split('/'))
    return " ".join(words)


def extract_info(data):
    lines = [str(line, encoding='utf8') for line in data.readlines()[28:48]
             if str(line, encoding='utf8').startswith("<yweather")]
    for day_index in range(1, 6):
        items = lines[day_index].split('"')[1:-1]
        items = ['day'] + [item.strip().strip('=') for item in items]
        conditions = {}
        for i in range(0, len(items), 2):
            conditions[items[i]] = items[i+1]
        conditions['text'] = replace_text(conditions['text'])
        yield conditions


def get_weather_data():
    return urllib.request.urlopen("http://weather.yahooapis.com/"
                                  "forecastrss?u=c&w="
                                  + WOEID)


def nice_print(data):
    format_string = "{day:<3} | {high:>2} | {low:>2} | {text}"
    print(format_string.format(**data))

def print_header():
    print("Day | Hi | Lo | Conditions")
    print("----+----+----+-----------------")


data = get_weather_data()
info = extract_info(data)
if len(argv) > 1:
    info = list(info)
    today = (datetime.date.today().weekday() + 1) % 7
    days = {
        "Sunday":    0,
        "Monday":    1,
        "Tuesday":   2,
        "Wednesday": 3,
        "Thursday":  4,
        "Friday":    5,
        "Saturday":  6,
    }

    day_abbr = {
        "Sun": days["Sunday"],
        "Mon": days["Monday"],
        "Tue": days["Tuesday"],
        "Wed": days["Wednesday"],
        "Thu": days["Thursday"],
        "Fri": days["Friday"],
        "Sat": days["Saturday"],
    }

    to_show = []
    for arg in argv[1:]:
        if arg.capitalize() in day_abbr or arg[:3].capitalize() in day_abbr:
            to_show.append(day_abbr[arg[:3].capitalize()])
        elif arg.lower() == 'today':
            to_show.append(today)
        elif arg.lower() == 'tomorrow':
            to_show.append((today + 1) % 7)

    print_header()
    for day in to_show:
        try:
            nice_print(info[(day - today) % 7])
        except IndexError as e:
            print("Weather cannot see that far into the future.")
else:
    print_header()
    for day in info:
        nice_print(day)
